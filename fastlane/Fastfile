fastlane_version "2.9.0"

default_platform :ios

platform :ios do
  #
  # Learn more here: https://github.com/fastlane/setups/blob/master/samples-ios/distribute-beta-build.md ðŸš€
  #

  # Alpha (Crashlytics)
  lane :alpha do |values|
    # Fabric generated this lane for deployment to Crashlytics Beta
    # set 'export_method' to 'ad-hoc' if your Crashlytics Beta distribution uses ad-hoc provisioning
    gym(scheme: 'Bamilo (Staging)', export_method: 'ad-hoc')
    scan(scheme: 'Bamilo (Staging)', devices: ["iPhone SE"], clean: false)

    emails = values[:emails] ? values[:emails] : nil
    groups = values[:groups] ? values[:groups] : nil

    notify = values[:notify] ? values[:notify] : true

    crashlytics(api_token: 'ddde4ad6ad210575fdac10a908040d1a93e74833',
      build_secret: 'c37b1e5c603fb0fd9b71f1bf627d92f87718c6efd4aada50d724ab8ad126fe35',
      emails: emails,
      groups: groups,
      notes: changelog_from_git_commits,
      notifications: notify)

    # for all available options run `fastlane action crashlytics`

    # You can notify your team in chat that a beta build has been uploaded
    slack(
      slack_url: "https://hooks.slack.com/services/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",
      channel: "mobile-alerts",
      message: "Successfully uploaded an alpha release " + get_version_number + " (" + get_build_number + ")"
    )
  end

  # Beta (TestFlight)
  lane :beta do |values|
    ensure_git_status_clean
    ensure_git_branch(branch: 'develop')

    # ---------------------------
    # Increment our version numbers. This needs to be done for all of our targets (app, notification center, watch etc.). Here the build and version number will match.
    # ---------------------------
    increment_version_number
    version = get_version_number()
    increment_build_number(build_number: version)

    #---------------------------
    # Commit version bump
    #---------------------------
    commit_version_bump(message: 'Bump version', force: true)

    #---------------------------
    # Build
    #---------------------------
    gym(clean: true, output_directory: "/tmp", scheme: "Bamilo", codesigning_identity: "iPhone Distribution: internet rose 1 FZE (3GCCEEQ32X)")

    #---------------------------
    # Run Tests
    #---------------------------
    scan(scheme: 'Bamilo', devices: ["iPhone SE"], clean: false)

    #---------------------------
    # Upload to TestFlight
    #---------------------------
    pilot(skip_submission: true, username: "narbeh.mirzaei@bamilo.com")

    #---------------------------
    # Tag the submit
    #---------------------------
    git_tag = "Version_" + version
    add_git_tag(tag: git_tag)

    #---------------------------
    # Push to GitHub
    #---------------------------
    push_to_git_remote(remote: 'origin', local_branch: 'develop', remote_branch: 'develop', force: false)

    #---------------------------
    # Clean up our files
    #---------------------------
    clean_build_artifacts
  end
end
